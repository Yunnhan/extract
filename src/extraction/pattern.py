import re


SPLIT_PATTERN = re.compile(r':|：|\n|，|,|。')
SPACE_PATTERN = re.compile('( |\xa0)')
DATA_FRAME_FILTER_KEY_WORDS = re.compile(r'(?:中标|价|项目|成交|第|供应|候选|预)')
# 这些关键词用以确定该表格是纵向还是横向排列的表格
KEY_PATTERN = re.compile('第[一二三123]名|第[一二三123]中标|第[一二三123]预中标候选(人|单位|名称)|第[一二三123]候选(人|单位|名称|成交人)')

# =======================================================
# 以下为第一中标候选人的pattern
# =======================================================

# 用以定位第一中标候选人
FIRST_KEY_PATTERN = re.compile(
                            "第(1|一)名|第(一|1)中标|第一预中标候选(人|单位|名称)|中标供应商|(中标|成交)供应商(名称|单位)?|中标社会资本|"
                            "成交社会资本(名称|方|单位名称)|拟中标(单位|人|供应商)|第一候选(人|单位|名称|成交人)|(推荐)中标候选人|首选中标候选人")
# 如果存在这些关键词，那么不能够仅仅使用‘中标人’作为关键词。或许会有第二中标人，这样的关键词干扰。
DISTRIBUTE_KEY_PATTERN = re.compile("第[^1一]名|第[^1一]中标|第[^1一]预中标候选(人|单位|名称)|"
                             "第[^1一]候选(人|单位|名称|成交人)")
# 处理9751767， 10103847供应商
MORE_KEY_PATTERN = re.compile(
                            "第(1|一)名|第(一|1)中标|第一预中标候选(人|单位|名称)|(中标)?供应商|(成交|中标)供应商(名称|单位)?|中标社会资本|"
                            "成交社会资本(名称|方|单位名称)|拟?中标(单位|人|供应商|企业)|第一候选(人|单位|名称|成交人)|(推荐)中标候选人|中标人|"
                            "预?(中标|(\(|（)?成交(\)|）)?)(供应商|候选)?(人|单位|名称|信息)|^1$")

COMPANY_PATTERN = re.compile(r'公司')


# Clean 中需要用到的关键词
KEY_WORD_COMPANY = ['公司', '中心', '局', '院']
# 去除中心关键词
KEY_COMPANY_PATTERN = re.compile(r'(公司|[^法学医]院)$')
PU = ['>', '<', '-', '--', '—', '#', '/', '_', '，',
                '.', '\\', '?', '？', ':', '：', '&',
                ' ', '+', '~', ';', '；', '1', '2', '3', '4', '5', '6', '7', '8', '9']
PARENTHESES_AFTER = re.compile('[\)）]')
PARENTHESES_PRE = re.compile('[\(（]')

# =======================================================
# 以下为项目经理的pattern
# =======================================================

# 项目经理负责人相关关键词
MANAGER_PATTERN = re.compile(r'[0-9a-zA-Z元造写包备]')
RESPONSIBLE_PATTERN = re.compile('(项目(?:负责人|经理|总监)|姓名|建造师)')
# 只用于最近距离查找的时候，在df中含有以下关键词的时候，才会返回距离第一中标单位最近的那个人名
RESPONSIBLE_PATTERN_FOR_MANAGER_COMPUTE = re.compile('(项目(?:负责人|经理|总监)|建造师)')

# kafka集群，maxwell话题， 中筛选有效的数据
valid_database = ['stang_bid_new', 'stang_cbid', 'stang_bid', 'stang_pifu']

# manager 辅助定位pattern
PERSON_EXIST_FLAG = re.compile('True')

# =======================================================
# 以下为建设单位的pattern
# =======================================================

# 招标人，建设单位，关键词
BUILD_OWNER_PATTERN = re.compile(r'(招标人|招标单位|建设单位|采购人|采购单位|业主|发布部门|招标单位名称|业主单位|项目单位|项目建设方|采购机构|邀标单位|联系科室)')
# re表达式 最后一个|表示任意， 这里不加入有效判断
BUILD_OWNER_CLEAN_PATTERN = re.compile(r'(?:局|院|处|府|公司|会|区|厂)(?:\xa0| )?$')
# 建设单位， 不包含的关键词
INVALID_BUILD_OWNER_CLEAN_PATTERN = re.compile(r'(?:招标|投标|咨询|乙方|甲方|中心|(?:(?:管理).{1,6}(?:公司)))')


# ======================================================================================================================
# 以下为项目概况提取关键词， 注意相似的pattern会有不同的用处，修改时候确保是修改的你想要的pattern
# ======================================================================================================================

# 项目概况相关关键词, 用于每一个片段中进行提取
SUMMARY_INDEX_PATTERN = re.compile(r'^.{0,6}(?:项目|工程|建设|新建|基本|中标)(?:规模|概况|内容|范围)|^.{0,6}(?:招标|主要|中标|采购)(?:内容)|'
                                   r'^.{0,6}(?:概况)')
# 项目概况相关关键词, 用于全文判断是否拥有这些关键词，如果没有这些关键词，那么直接返回None
SUMMARY_INDEX_FULL_TEXT_PATTERN = re.compile(r'(?:项目|工程|建设|新建|基本|中标)(?:规模|概况|内容|范围)|(?:招标|主要|中标)(?:内容)|'
                                             r'(?:概况)')
SUMMARY_CONTAIN_PATTERN = re.compile(r'(公里|亿元|万元|大桥|涵管|隧道|桥梁?|路基|全长|线宽|建筑面积|路面|'
                                     r'道路|标段|面积|车道|千米|水库|涵|桩号|重建|升级|新建|改造|宽|米|座|'
                                     r'km|KM|地点|(?:项目|工程|建设|新建|基本|中标)(?:规模|概况|内容|范围)|(?:招标|主要|中标|采购)(?:内容|范围))')
# 项目概况文本分割的pattern
SUMMARY_SPLIT_PATTERN = re.compile(r'\n')
# 项目概况最后的提取结构，去除最开始的序号 例如 2.2项目概况 -> 项目概况
SUMMARY_REMOVE_NUM_PATTERN = re.compile(r'^[0-9.、()（）一二三四五六七八九十 ]{1,4}')
# p标签，结束标签。 获取项目规模的时候，添加\n，用以文本的分段。
P_TAG_PATTERN = re.compile(r'</p>')


# ======================================================================================================================
# 以下为中交特殊处理pattern
# ======================================================================================================================
ZHONGJIAO = re.compile('中交')


#########金额
PRICE_PATTERN = re.compile('中标金额|中标价|中标价格|成交金额|总中标金额|最终报价|成交价|投标报价|总报价|投标报价|投标金额|投标总价|投标价|预(?:期)?中标价|￥')
